TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 15] <- "3:00PM TO 4:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 16] <- "4:00PM TO 5:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 17] <- "5:00PM TO 6:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 18] <- "6:00PM TO 7:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 19] <- "7:00PM TO 8:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 20] <- "8:00PM TO 9:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 21] <- "9:00PM TO 10:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 22] <- "10:00PM TO 11:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 23] <- "11:00PM TO 12:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME <- factor(TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME, levels=c("12:00AM TO 1:00AM","1:00AM TO 2:00AM","2:00AM TO 3:00AM","3:00AM TO 4:00AM","4:00AM TO 5:00AM","5:00AM TO 6:00AM","6:00AM TO 7:00AM","7:00AM TO 8:00AM","8:00AM TO 9:00AM","9:00AM TO 10:00AM","10:00AM TO 11:00AM","11:00AM TO 12:00PM","12:00PM TO 1:00PM","1:00PM TO 2:00PM","2:00PM TO 3:00PM","3:00PM TO 4:00PM","4:00PM TO 5:00PM","5:00PM TO 6:00PM","6:00PM TO 7:00PM","7:00PM TO 8:00PM","8:00PM TO 9:00PM","9:00PM TO 10:00PM","10:00PM TO 11:00PM","11:00PM TO 12:00AM"))
View(TB_ECHO_ANALYSIS_FRIDAY_PRESENT)
View(TB_ECHO_ANALYSIS_FRIDAY_PRESENT)
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 0] <- "12:00AM TO 1:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 0] <- "12:00AM TO 1:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 0] <- "12:00AM TO 1:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 1] <- "1:00AM TO 2:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 2] <- "2:00AM TO 3:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 3] <- "3:00AM TO 4:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 4] <- "4:00AM TO 5:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 5] <- "5:00AM TO 6:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 6] <- "6:00AM TO 7:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 7] <- "7:00AM TO 8:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 8] <- "8:00AM TO 9:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 9] <- "9:00AM TO 10:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 10] <- "10:00AM TO 11:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 11] <- "11:00AM TO 12:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 12] <- "12:00PM TO 1:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 13] <- "1:00PM TO 2:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 14] <- "2:00PM TO 3:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 15] <- "3:00PM TO 4:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 16] <- "4:00PM TO 5:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 17] <- "5:00PM TO 6:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 18] <- "6:00PM TO 7:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 19] <- "7:00PM TO 8:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 20] <- "8:00PM TO 9:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 21] <- "9:00PM TO 10:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 22] <- "10:00PM TO 11:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 23] <- "11:00PM TO 12:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME <- factor(TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME, levels=c("12:00AM TO 1:00AM","1:00AM TO 2:00AM","2:00AM TO 3:00AM","3:00AM TO 4:00AM","4:00AM TO 5:00AM","5:00AM TO 6:00AM","6:00AM TO 7:00AM","7:00AM TO 8:00AM","8:00AM TO 9:00AM","9:00AM TO 10:00AM","10:00AM TO 11:00AM","11:00AM TO 12:00PM","12:00PM TO 1:00PM","1:00PM TO 2:00PM","2:00PM TO 3:00PM","3:00PM TO 4:00PM","4:00PM TO 5:00PM","5:00PM TO 6:00PM","6:00PM TO 7:00PM","7:00PM TO 8:00PM","8:00PM TO 9:00PM","9:00PM TO 10:00PM","10:00PM TO 11:00PM","11:00PM TO 12:00AM"))
View(TB_ECHO_ANALYSIS)
View(TB_ECHO_ANALYSIS)
TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM <- subset(TB_ECHO_ANALYSIS,(TB_ECHO_ANALYSIS$FIRST_PRESENT_WD == "Friday") & (hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) <= 12))
View(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM)
View(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM)
TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH <- subset(TB_ECHO_ANALYSIS,(TB_ECHO_ANALYSIS$FIRST_PRESENT_WD == "Friday") & (hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) <= 12) & (TB_ECHO_ANALYSIS$SITE == "RGH"))
View(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH)
View(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH)
TB_ECHO_ANALYSIS$FIRST_PRESENT_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) < 14] <- "B2PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) >= 14] <- "P2PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 0] <- "12:00AM TO 1:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 1] <- "1:00AM TO 2:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 2] <- "2:00AM TO 3:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 3] <- "3:00AM TO 4:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 4] <- "4:00AM TO 5:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 5] <- "5:00AM TO 6:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 6] <- "6:00AM TO 7:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 7] <- "7:00AM TO 8:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 8] <- "8:00AM TO 9:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 9] <- "9:00AM TO 10:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 10] <- "10:00AM TO 11:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 11] <- "11:00AM TO 12:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 12] <- "12:00PM TO 1:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 13] <- "1:00PM TO 2:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 14] <- "2:00PM TO 3:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 15] <- "3:00PM TO 4:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 16] <- "4:00PM TO 5:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 17] <- "5:00PM TO 6:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 18] <- "6:00PM TO 7:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 19] <- "7:00PM TO 8:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 20] <- "8:00PM TO 9:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 21] <- "9:00PM TO 10:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 22] <- "10:00PM TO 11:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 23] <- "11:00PM TO 12:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME <- factor(TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME, levels=c("12:00AM TO 1:00AM","1:00AM TO 2:00AM","2:00AM TO 3:00AM","3:00AM TO 4:00AM","4:00AM TO 5:00AM","5:00AM TO 6:00AM","6:00AM TO 7:00AM","7:00AM TO 8:00AM","8:00AM TO 9:00AM","9:00AM TO 10:00AM","10:00AM TO 11:00AM","11:00AM TO 12:00PM","12:00PM TO 1:00PM","1:00PM TO 2:00PM","2:00PM TO 3:00PM","3:00PM TO 4:00PM","4:00PM TO 5:00PM","5:00PM TO 6:00PM","6:00PM TO 7:00PM","7:00PM TO 8:00PM","8:00PM TO 9:00PM","9:00PM TO 10:00PM","10:00PM TO 11:00PM","11:00PM TO 12:00AM"))
TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM <- subset(TB_ECHO_ANALYSIS,(TB_ECHO_ANALYSIS$FIRST_PRESENT_WD == "Friday") & (hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) <= 12))
TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH <- subset(TB_ECHO_ANALYSIS,(TB_ECHO_ANALYSIS$FIRST_PRESENT_WD == "Friday") & (hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) <= 12) & (TB_ECHO_ANALYSIS$SITE == "RGH"))
View(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH)
View(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH)
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH, .(FIRST_PRESENT_HOURLY_TIME_FRAME),summarize, Median_LOS = mean(TOTAL_LOS))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH, .(FIRST_PRESENT_HOURLY_TIME_FRAME),summarize, Median_LOS = mean(TOTAL_LOS))
install.packages("dplyr")
library(dplyr)
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH, .(FIRST_PRESENT_HOURLY_TIME_FRAME),summarize, Median_LOS = mean(TOTAL_LOS))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH, .(FIRST_PRESENT_HOURLY_TIME_FRAME), Median_LOS = mean(TOTAL_LOS))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH, .(FIRST_PRESENT_HOURLY_TIME_FRAME), Median_LOS = mean(TOTAL_LOS))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH, .(FIRST_PRESENT_HOURLY_TIME_FRAME), Median_LOS = mean(TOTAL_LOS))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH$TOTAL_LOS, .(FIRST_PRESENT_HOURLY_TIME_FRAME), median)
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH$TOTAL_LOS, .(FIRST_PRESENT_HOURLY_TIME_FRAME), mean)
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_PRESENT_HOURLY_TIME_FRAME,summarise,mean=mean(TOTAL_LOS),sd=sd(TOTAL_LOS))
library(plyr)
install.packages("plyr")
library(plyr)
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_PRESENT_HOURLY_TIME_FRAME,summarise,mean=mean(TOTAL_LOS),sd=sd(TOTAL_LOS))
TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH <- subset(TB_ECHO_ANALYSIS,(TB_ECHO_ANALYSIS$FIRST_PRESENT_WD == "Friday") & (hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) <= 12) & (TB_ECHO_ANALYSIS$SITE == "RGH"))
install.packages("lubridate")
library(lubridate)
TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH <- subset(TB_ECHO_ANALYSIS,(TB_ECHO_ANALYSIS$FIRST_PRESENT_WD == "Friday") & (hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) <= 12) & (TB_ECHO_ANALYSIS$SITE == "RGH"))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_PRESENT_HOURLY_TIME_FRAME,summarise,mean=mean(TOTAL_LOS),sd=sd(TOTAL_LOS))
TB_ECHO_ANALYSIS$FIRST_PRESENT_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) < 14] <- "B2PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) >= 14] <- "P2PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 0] <- "12:00AM TO 1:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 1] <- "1:00AM TO 2:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 2] <- "2:00AM TO 3:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 3] <- "3:00AM TO 4:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 4] <- "4:00AM TO 5:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 5] <- "5:00AM TO 6:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 6] <- "6:00AM TO 7:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 7] <- "7:00AM TO 8:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 8] <- "8:00AM TO 9:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 9] <- "9:00AM TO 10:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 10] <- "10:00AM TO 11:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 11] <- "11:00AM TO 12:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 12] <- "12:00PM TO 1:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 13] <- "1:00PM TO 2:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 14] <- "2:00PM TO 3:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 15] <- "3:00PM TO 4:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 16] <- "4:00PM TO 5:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 17] <- "5:00PM TO 6:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 18] <- "6:00PM TO 7:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 19] <- "7:00PM TO 8:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 20] <- "8:00PM TO 9:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 21] <- "9:00PM TO 10:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 22] <- "10:00PM TO 11:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 23] <- "11:00PM TO 12:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME <- factor(TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME, levels=c("12:00AM TO 1:00AM","1:00AM TO 2:00AM","2:00AM TO 3:00AM","3:00AM TO 4:00AM","4:00AM TO 5:00AM","5:00AM TO 6:00AM","6:00AM TO 7:00AM","7:00AM TO 8:00AM","8:00AM TO 9:00AM","9:00AM TO 10:00AM","10:00AM TO 11:00AM","11:00AM TO 12:00PM","12:00PM TO 1:00PM","1:00PM TO 2:00PM","2:00PM TO 3:00PM","3:00PM TO 4:00PM","4:00PM TO 5:00PM","5:00PM TO 6:00PM","6:00PM TO 7:00PM","7:00PM TO 8:00PM","8:00PM TO 9:00PM","9:00PM TO 10:00PM","10:00PM TO 11:00PM","11:00PM TO 12:00AM"))
TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM <- subset(TB_ECHO_ANALYSIS,(TB_ECHO_ANALYSIS$FIRST_PRESENT_WD == "Friday") & (hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) <= 12))
TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH <- subset(TB_ECHO_ANALYSIS,(TB_ECHO_ANALYSIS$FIRST_PRESENT_WD == "Friday") & (hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) <= 12) & (TB_ECHO_ANALYSIS$SITE == "RGH"))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_PRESENT_HOURLY_TIME_FRAME,summarise,mean=mean(TOTAL_LOS),sd=sd(TOTAL_LOS))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_PRESENT_TIME_FRAME,summarise,mean=mean(TOTAL_LOS),sd=sd(TOTAL_LOS))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_ECHO_REQUEST_TIME_FRAME,summarise,mean=mean(TOTAL_LOS),sd=sd(TOTAL_LOS))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_ECHO_REQUEST_TIME_FRAME,summarise,median=mean(TOTAL_LOS),sd=sd(TOTAL_LOS))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_ECHO_REQUEST_TIME_FRAME,summarise,median=median(TOTAL_LOS),sd=sd(TOTAL_LOS))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_ECHO_REQUEST_TIME_FRAME,summarise,median=median(TOTAL_LOS),mean=mean(TOTAL_LOS))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_ECHO_REQUEST_TIME_FRAME,summarise,mean=mean(TOTAL_LOS),median=median(TOTAL_LOS))
#tidy data up
TB_ECHO_ANALYSIS<-subset(subset(TB_ECHO_ANALYSIS,CHF_DX_ORDER ==1)) # Use primary DX
sum(is.na(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST)) #1 record with FIRST_ECHO_REQUEST is na
TB_ECHO_ANALYSIS<-subset(TB_ECHO_ANALYSIS,!is.na(FIRST_ECHO_REQUEST)) #exclude 1 record with FIRST_ECHO_REQUEST is na"
TB_ECHO_ANALYSIS<-subset(TB_ECHO_ANALYSIS, SITE !="ACH") #exclude 2 record from ACH"
TB_ECHO_ANALYSIS$AGE_AT_ADMIT_GRP <- cut(TB_ECHO_ANALYSIS$AGE_AT_ADMIT, breaks=c(0,70,max(TB_ECHO_ANALYSIS$AGE_AT_ADMIT)))
TB_ECHO_ANALYSIS$ECHO_ORDER_TO_ECHO_RESULT_HR <- as.numeric(difftime(TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT,TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST,units = "hours"))
#TB_ECHO_ANALYSIS<-subset(TB_ECHO_ANALYSIS, select=-c(ORIGINAL_DX)) #drop ORIGINAL_DX
#Extract the day of the week
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD<-weekdays(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST)
TB_ECHO_ANALYSIS$FIRST_ECHO_START_WD<-weekdays(TB_ECHO_ANALYSIS$FIRST_ECHO_START)
TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT_WD<-weekdays(TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT)
TB_ECHO_ANALYSIS$FIRST_PRESENT_WD<-weekdays(TB_ECHO_ANALYSIS$FIRST_PRESENT)
TB_ECHO_ANALYSIS$ADMIT_WD<-weekdays(TB_ECHO_ANALYSIS$ADMIT_DT)
TB_ECHO_ANALYSIS$DISCHARGE_WD<-weekdays(TB_ECHO_ANALYSIS$DISCHARGE_DT)
#factorize the day of the week
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD <- factor(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD, levels=c("Monday", "Tuesday", "Wednesday","Thursday","Friday","Saturday","Sunday"))
TB_ECHO_ANALYSIS$FIRST_ECHO_START_WD <- factor(TB_ECHO_ANALYSIS$FIRST_ECHO_START_WD, levels=c("Monday", "Tuesday", "Wednesday","Thursday","Friday","Saturday","Sunday"))
TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT_WD <- factor(TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT_WD, levels=c("Monday", "Tuesday", "Wednesday","Thursday","Friday","Saturday","Sunday"))
TB_ECHO_ANALYSIS$FIRST_PRESENT_WD <- factor(TB_ECHO_ANALYSIS$FIRST_PRESENT_WD, levels=c("Monday", "Tuesday", "Wednesday","Thursday","Friday","Saturday","Sunday"))
TB_ECHO_ANALYSIS$ADMIT_WD <- factor(TB_ECHO_ANALYSIS$ADMIT_WD, levels=c("Monday", "Tuesday", "Wednesday","Thursday","Friday","Saturday","Sunday"))
TB_ECHO_ANALYSIS$DISCHARGE_WD <- factor(TB_ECHO_ANALYSIS$DISCHARGE_WD, levels=c("Monday", "Tuesday", "Wednesday","Thursday","Friday","Saturday","Sunday"))
#define 2 echo order timing categoris
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) < 14] <- "B2PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) >= 14] <- "P2PM"
#concatenate the day of the week and 2 order timing categories
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2 <- paste(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD, TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_TIME_FRAME, sep=' ')
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2[substr(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2,1,3) == "Mon"]<- "Mon"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2[substr(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2,1,3) == "Tue"]<- "Tue"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2[substr(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2,1,3) == "Wed"]<- "Wed"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2[substr(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2,1,3) == "Thu"]<- "Thu"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2[substr(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2,1,3) == "Sat"]<- "Sat"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2[substr(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2,1,3) == "Sun"]<- "Sun"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2[substr(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2,1,11) == "Friday B2PM"]<- "Fri B2PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2[substr(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2,1,11) == "Friday P2PM"]<- "Fri P2PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2 <- factor(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD2, levels=c("Mon", "Tue", "Wed","Thu","Fri B2PM","Fri P2PM","Sat","Sun"))
#define ECHO_ORDER_CATEGORY
TB_ECHO_ANALYSIS$ECHO_ORDER_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST < TB_ECHO_ANALYSIS$FIRST_PRESENT] <- "PRIOR_ED"
TB_ECHO_ANALYSIS$ECHO_ORDER_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST < TB_ECHO_ANALYSIS$ADMIT_DT & TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST >= TB_ECHO_ANALYSIS$FIRST_PRESENT] <- "ED"
TB_ECHO_ANALYSIS$ECHO_ORDER_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST >= TB_ECHO_ANALYSIS$ADMIT_DT & TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST<= TB_ECHO_ANALYSIS$ADMIT_DT+24*60*60] <- "24_HRS"
TB_ECHO_ANALYSIS$ECHO_ORDER_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST >= TB_ECHO_ANALYSIS$ADMIT_DT & TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST > TB_ECHO_ANALYSIS$ADMIT_DT+24*60*60 & TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST <= TB_ECHO_ANALYSIS$ADMIT_DT+48*60*60] <- "48_HRS"
TB_ECHO_ANALYSIS$ECHO_ORDER_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST >= TB_ECHO_ANALYSIS$ADMIT_DT & TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST >  TB_ECHO_ANALYSIS$ADMIT_DT+48*60*60 & TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST <= TB_ECHO_ANALYSIS$ADMIT_DT+72*60*60] <- "72_HRS"
TB_ECHO_ANALYSIS$ECHO_ORDER_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST >= TB_ECHO_ANALYSIS$ADMIT_DT & TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST > TB_ECHO_ANALYSIS$ADMIT_DT+72*60*60] <- "72_PLUS_HRS"
TB_ECHO_ANALYSIS$ECHO_ORDER_CATEGORY <- factor(TB_ECHO_ANALYSIS$ECHO_ORDER_CATEGORY, levels=c("PRIOR_ED", "ED", "24_HRS", "48_HRS", "72_HRS", "72_PLUS_HRS"))
#define ECHO_RESULT_CATEGORY
TB_ECHO_ANALYSIS$ECHO_RESULT_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT < TB_ECHO_ANALYSIS$FIRST_PRESENT] <- "PRIOR_ED"
TB_ECHO_ANALYSIS$ECHO_RESULT_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT < TB_ECHO_ANALYSIS$ADMIT_DT & TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT >= TB_ECHO_ANALYSIS$FIRST_PRESENT] <- "ED"
TB_ECHO_ANALYSIS$ECHO_RESULT_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT >= TB_ECHO_ANALYSIS$ADMIT_DT & TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT<= TB_ECHO_ANALYSIS$ADMIT_DT+24*60*60] <- "24_HRS"
TB_ECHO_ANALYSIS$ECHO_RESULT_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT >= TB_ECHO_ANALYSIS$ADMIT_DT & TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT > TB_ECHO_ANALYSIS$ADMIT_DT+24*60*60 & TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT <= TB_ECHO_ANALYSIS$ADMIT_DT+48*60*60] <- "48_HRS"
TB_ECHO_ANALYSIS$ECHO_RESULT_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT >= TB_ECHO_ANALYSIS$ADMIT_DT & TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT >  TB_ECHO_ANALYSIS$ADMIT_DT+48*60*60 & TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT <= TB_ECHO_ANALYSIS$ADMIT_DT+72*60*60] <- "72_HRS"
TB_ECHO_ANALYSIS$ECHO_RESULT_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT >= TB_ECHO_ANALYSIS$ADMIT_DT & TB_ECHO_ANALYSIS$FIRST_ECHO_RESULT > TB_ECHO_ANALYSIS$ADMIT_DT+72*60*60] <- "72_PLUS_HRS"
TB_ECHO_ANALYSIS$ECHO_RESULT_CATEGORY <- factor(TB_ECHO_ANALYSIS$ECHO_RESULT_CATEGORY, levels=c("PRIOR_ED", "ED", "24_HRS", "48_HRS", "72_HRS", "72_PLUS_HRS"))
#define site categories
TB_ECHO_ANALYSIS$SITE_CATEGORY[TB_ECHO_ANALYSIS$SITE == "RGH"] <- "RGH"
TB_ECHO_ANALYSIS$SITE_CATEGORY[TB_ECHO_ANALYSIS$SITE != "RGH"] <- "OTHERS"
table(TB_ECHO_ANALYSIS$SITE_CATEGORY)
table(TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION)
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == "MD-Cardiology"] <- "CARDIOLOGISTS"
# The following does not work
# TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Family Practitioner", "Physician")] <- "HOSPITALISTS"
# The following works
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[(TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == "MD-Family Practitioner") | (TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == "Physician")] <- "HOSPITALISTS"
#TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Family Practitioner")] <- "HOSPITALISTS"
#TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("Physician")] <- "HOSPITALISTS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Internal Medicine")] <- "GIM"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("Clinical Assistant")] <- "TRAINEES"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("Fellow")] <- "TRAINEES"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("Resident")] <- "TRAINEES"
#TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("Nurse Practitioner", "MD-Anesthesia", "MD-Emergency Medicine", "MD-Nephrology", "MD-Critical Care Medicine", "MD-Cardiac Surgery", "MD-Respirology", "Social Work Asst", "MD-Geriatric Medicine", "MD-Endocrinology/Metabolism", "MD-General Surgery", "MD-Rheumatology", "MD-Hematology", "MD-Infectious Diseases")] <- "OTHERS" not work precisely,  need to do separately
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("Nurse Practitioner")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Anesthesia")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Emergency Medicine")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Nephrology")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Critical Care Medicine")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Cardiac Surgery")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Respirology")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("Social Work Asst")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Geriatric Medicine")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Endocrinology/Metabolism")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-General Surgery")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Rheumatology")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Hematology")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY[TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION == c("MD-Infectious Diseases")] <- "OTHERS"
TB_ECHO_ANALYSIS$PROFESSION_CATEGORY <- factor(TB_ECHO_ANALYSIS$PROFESSION_CATEGORY, levels=c("CARDIOLOGISTS","HOSPITALISTS","GIM","TRAINEES","OTHERS"))
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 0] <- "12:00AM TO 1:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 1] <- "1:00AM TO 2:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 2] <- "2:00AM TO 3:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 3] <- "3:00AM TO 4:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 4] <- "4:00AM TO 5:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 5] <- "5:00AM TO 6:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 6] <- "6:00AM TO 7:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 7] <- "7:00AM TO 8:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 8] <- "8:00AM TO 9:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 9] <- "9:00AM TO 10:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 10] <- "10:00AM TO 11:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 11] <- "11:00AM TO 12:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 12] <- "12:00PM TO 1:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 13] <- "1:00PM TO 2:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 14] <- "2:00PM TO 3:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 15] <- "3:00PM TO 4:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 16] <- "4:00PM TO 5:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 17] <- "5:00PM TO 6:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 18] <- "6:00PM TO 7:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 19] <- "7:00PM TO 8:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 20] <- "8:00PM TO 9:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 21] <- "9:00PM TO 10:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 22] <- "10:00PM TO 11:00PM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST) == 23] <- "11:00PM TO 12:00AM"
TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME <- factor(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME, levels=c("12:00AM TO 1:00AM","1:00AM TO 2:00AM","2:00AM TO 3:00AM","3:00AM TO 4:00AM","4:00AM TO 5:00AM","5:00AM TO 6:00AM","6:00AM TO 7:00AM","7:00AM TO 8:00AM","8:00AM TO 9:00AM","9:00AM TO 10:00AM","10:00AM TO 11:00AM","11:00AM TO 12:00PM","12:00PM TO 1:00PM","1:00PM TO 2:00PM","2:00PM TO 3:00PM","3:00PM TO 4:00PM","4:00PM TO 5:00PM","5:00PM TO 6:00PM","6:00PM TO 7:00PM","7:00PM TO 8:00PM","8:00PM TO 9:00PM","9:00PM TO 10:00PM","10:00PM TO 11:00PM","11:00PM TO 12:00AM"))
#table(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_HOURLY_TIME_FRAME)
#table(TB_ECHO_ANALYSIS$FIRST_ECHO_REQUEST_WD)
#table(TB_ECHO_ANALYSIS$SITE)
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 0] <- "12:00AM TO 1:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 1] <- "1:00AM TO 2:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 2] <- "2:00AM TO 3:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 3] <- "3:00AM TO 4:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 4] <- "4:00AM TO 5:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 5] <- "5:00AM TO 6:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 6] <- "6:00AM TO 7:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 7] <- "7:00AM TO 8:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 8] <- "8:00AM TO 9:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 9] <- "9:00AM TO 10:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 10] <- "10:00AM TO 11:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 11] <- "11:00AM TO 12:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 12] <- "12:00PM TO 1:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 13] <- "1:00PM TO 2:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 14] <- "2:00PM TO 3:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 15] <- "3:00PM TO 4:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 16] <- "4:00PM TO 5:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 17] <- "5:00PM TO 6:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 18] <- "6:00PM TO 7:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 19] <- "7:00PM TO 8:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 20] <- "8:00PM TO 9:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 21] <- "9:00PM TO 10:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 22] <- "10:00PM TO 11:00PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) == 23] <- "11:00PM TO 12:00AM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME <- factor(TB_ECHO_ANALYSIS$FIRST_PRESENT_HOURLY_TIME_FRAME, levels=c("12:00AM TO 1:00AM","1:00AM TO 2:00AM","2:00AM TO 3:00AM","3:00AM TO 4:00AM","4:00AM TO 5:00AM","5:00AM TO 6:00AM","6:00AM TO 7:00AM","7:00AM TO 8:00AM","8:00AM TO 9:00AM","9:00AM TO 10:00AM","10:00AM TO 11:00AM","11:00AM TO 12:00PM","12:00PM TO 1:00PM","1:00PM TO 2:00PM","2:00PM TO 3:00PM","3:00PM TO 4:00PM","4:00PM TO 5:00PM","5:00PM TO 6:00PM","6:00PM TO 7:00PM","7:00PM TO 8:00PM","8:00PM TO 9:00PM","9:00PM TO 10:00PM","10:00PM TO 11:00PM","11:00PM TO 12:00AM"))
TB_ECHO_ANALYSIS$FIRST_PRESENT_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) < 14] <- "B2PM"
TB_ECHO_ANALYSIS$FIRST_PRESENT_TIME_FRAME[hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) >= 14] <- "P2PM"
TB_ECHO_ANALYSIS_FRIDAY<-subset(TB_ECHO_ANALYSIS,FIRST_ECHO_REQUEST_WD == "Friday")
TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH <- subset(TB_ECHO_ANALYSIS,(TB_ECHO_ANALYSIS$FIRST_PRESENT_WD == "Friday") & (hour(TB_ECHO_ANALYSIS$FIRST_PRESENT) <= 12) & (TB_ECHO_ANALYSIS$SITE == "RGH"))
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_ECHO_REQUEST_TIME_FRAME,summarise,mean=mean(TOTAL_LOS),median=median(TOTAL_LOS))
library("plyr", lib.loc="~/R/win-library/3.5")
install.packages("ggplot2")
)
install.packages("dplyr")
install.packages("DBI")
install.packages("ROracle")
install.packages("HMisc")
install.packages("Hisc")
install.packages("Hmisc")
install.packages("tidyr")
install.packages("DBI")
install.packages("ROracle")
install.packages("ggplot2")
install.packages("lubridate")
install.packages("plyr")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("ggplot2")
install.packages("lubridate")
install.packages("plyr")
install.packages("dplyr")
install.packages("Hmisc")
install.packages("tibble")
install.packages("tidyr")
install.packages("tidyselect")
install.packages("scales")
#Data Connection
setwd("P:/01_SCN_Development/SCN_ADMIN/007_Special_Projects/Heart_Failure_PoC/03_Results")
#Read-in Oracle/SQL password from secure folder in personal workspace
con_pass <-file("p:/Mingfu_Personal/R_Work/sql_pass.txt")
sql_pass <-readLines(con_pass)
# Create an Oracle Driver instance object
drv <- dbDriver("Oracle")
# Create a Schema Connection object
con <- dbConnect(drv, "MINGFULIU[HEART_FAILURE]", sql_pass, "AHSDRRX.WORLD")
close(con_pass)
# List the Tables and Views in the connected schema
#dbListTables(con)
# Create a result-set object using dbSendQuery method, which can be used to fetch data in chunks as well as all of data at once
res <- dbSendQuery(con, "SELECT * FROM HEART_FAILURE.TB_ECHO_TIMING_ANALYSIS")
# fetch N records at a time (recommended)
fetch(res, n = 5)
# OR fetch ALL records at once (not recommended for large result-sets)
#fetch(res)
TB_ECHO_ANALYSIS<-fetch(res)
# Clear the result-set object
dbClearResult(res)
# Clear the Schema Connection object
dbDisconnect(con)
# Clear the Oracle Driver instance object
dbUnloadDriver(drv)
git clone https://github.com/hadley/ggplot2-book.git
library(devtools)
if (packageVersion("devtools") < "1.9.1") {
message("Please upgrade devtools")
}
devtools::install_deps()
install.packages("devtools")
install.packages("devtools")
library(devtools)
if (packageVersion("devtools") < "1.9.1") {
message("Please upgrade devtools")
}
devtools::install_deps()
View(c2)
View(VOLUME)
View(TB_ECHO_ANALYSIS_FRIDAY_PRESENT)
table(TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION, useNA = "always")
table(TB_ECHO_ANALYSIS$PROFESSION_CATEGORY, useNA = "always")
table(TB_ECHO_ANALYSIS$PROFESSION_CATEGORY,TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION, useNA = "ifany")
#table(TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION, useNA = "always")
#table(TB_ECHO_ANALYSIS$PROFESSION_CATEGORY, useNA = "always")
#table(TB_ECHO_ANALYSIS$PROFESSION_CATEGORY,TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION, useNA = "ifany")
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_ECHO_REQUEST_TIME_FRAME,summarise,mean=mean(TOTAL_LOS),median=median(TOTAL_LOS))
table(TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION, useNA = "always")
table(TB_ECHO_ANALYSIS$PROFESSION_CATEGORY, useNA = "always")
table(TB_ECHO_ANALYSIS$PROFESSION_CATEGORY,TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION, useNA = "ifany")
install.packages("quantreg")
medians <- aggregate(TOTAL_LOS ~  FIRST_ECHO_REQUEST_TIME_FRAME + GENDER + AGE_AT_ADMIT_GRP, TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH, median)
medians <- aggregate(TOTAL_LOS ~  FIRST_ECHO_REQUEST_TIME_FRAME, TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH, median)
TB_ECHO_ANALYSIS$GENDER_AGE_GRP <- paste(TB_ECHO_ANALYSIS$GENDER, TB_ECHO_ANALYSIS$AGE_AT_ADMIT_GRP, sep=' ')
View(p6)
View(TB_ECHO_ANALYSIS)
View(TB_ECHO_ANALYSIS)
View(TB_ECHO_ANALYSIS)
View(TB_ECHO_ANALYSIS)
View(TB_ECHO_ANALYSIS)
View(TB_ECHO_ANALYSIS)
View(TB_ECHO_ANALYSIS)
View(TB_ECHO_ANALYSIS)
View(TB_ECHO_ANALYSIS_FRIDAY_PRESENT)
View(TB_ECHO_ANALYSIS_FRIDAY_PRESENT)
table(TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION, useNA = "always")
table(TB_ECHO_ANALYSIS$PROFESSION_CATEGORY, useNA = "always")
table(TB_ECHO_ANALYSIS$PROFESSION_CATEGORY,TB_ECHO_ANALYSIS$FIRST_ECHO_ORDER_PROFESSION, useNA = "ifany")
ddply(TB_ECHO_ANALYSIS_FRIDAY_PRESENT_B2PM_RGH,~FIRST_ECHO_REQUEST_TIME_FRAME,summarise,mean=mean(TOTAL_LOS),SD=sd(TOTAL_LOS),min=min(TOTAL_LOS),Q25=quantile(TOTAL_LOS,probs=0.25),median=median(TOTAL_LOS),Q75=quantile(TOTAL_LOS,probs=0.75),max=max(TOTAL_LOS),N=length(TOTAL_LOS))
setwd("D:/Coursera/8_Practical Machine Learning/Coursera-Practical-Machine-Learning-Project")
install.packages("caret")
library(caret)
train_in <- read.csv('./pml-training.csv', header=T)
validation <- read.csv('./pml-testing.csv', header=T)
#training$classe <- as.factor(training$classe)
#testing$classe <- as.factor(testing$classe)
# find only nonzero columns in validation set
all_zero_colnames <- sapply(names(validation), function(x) all(is.na(validation[,x])==TRUE))
nznames <- names(all_zero_colnames)[all_zero_colnames==FALSE]
nznames <- nznames[-(1:7)]
nznames <- nznames[1:(length(nznames)-1)]
set.seed(127)
training_sample <- createDataPartition(y=train_in$classe, p=0.7, list=FALSE)
training <- train_in[training_sample, ]
testing <- train_in[-training_sample, ]
#folds <- createFolds(y=training$classe, k=3, list=TRUE, returnTrain=TRUE)
#preObj <- preProcess(training[, 1:(nrow(training)-1)], method =c('center', 'scale'))
#featurePlot(x=training[, 15:17], y=training$classe, plot = 'pairs')
# PCA
#prComp <- prcomp(var1, var2)
#preProc <- preProcess(training[, 1:2], method = 'pca', pcaComp = 2)
#testPC <- predict(preProc, testing[, 1:2]) # predicts preprocessed training data
#feature selection
#set.seed(127)
# ctrl <- rfeControl(functions = lmFuncs,
#                    method = "repeatedcv",
#                    repeats = 5,
#                    verbose = FALSE)
# lmProfile <- rfe(x, y,
#                  sizes = subsets,
#                  rfeControl = ctrl)
# lmProfile
fitControl <- trainControl(method='cv', number = 3)
model_cart <- train(
classe ~ .,
#data=training[, 8:ncol(training)],
data=training[, c('classe', nznames)],
trControl=fitControl,
#preProcess=c('center', 'scale'),
method='rpart'
)
save(model_cart, file='./ModelFitCART.RData')
model_gbm <- train(
classe ~ .,
#data=training[, 8:ncol(training)],
data=training[, c('classe', nznames)],
trControl=fitControl,
#preProcess=c('center', 'scale'),
method='gbm'
)
setwd("D:/Coursera/8_Practical Machine Learning/Coursera-Practical-Machine-Learning-Project")
library(caret)
train_in <- read.csv('./pml-training.csv', header=T)
validation <- read.csv('./pml-testing.csv', header=T)
all_zero_colnames <- sapply(names(validation), function(x) all(is.na(validation[,x])==TRUE))
nznames <- names(all_zero_colnames)[all_zero_colnames==FALSE]
nznames <- nznames[-(1:7)]
nznames <- nznames[1:(length(nznames)-1)]
set.seed(127)
training_sample <- createDataPartition(y=train_in$classe, p=0.7, list=FALSE)
training <- train_in[training_sample, ]
testing <- train_in[-training_sample, ]
fitControl <- trainControl(method='cv', number = 3)
model_cart <- train(
classe ~ .,
#data=training[, 8:ncol(training)],
data=training[, c('classe', nznames)],
trControl=fitControl,
#preProcess=c('center', 'scale'),
method='rpart'
)
save(model_cart, file='./ModelFitCART.RData')
model_gbm <- train(
classe ~ .,
#data=training[, 8:ncol(training)],
data=training[, c('classe', nznames)],
trControl=fitControl,
#preProcess=c('center', 'scale'),
method='gbm'
)
save(model_gbm, file='./ModelFitGBM.RData')
model_rf <- train(
classe ~ .,
#data=training[, 8:ncol(training)],
data=training[, c('classe', nznames)],
trControl=fitControl,
#preProcess=c('center', 'scale'),
method='rf',
ntree=100
)
model_rf <- train(
classe ~ .,
#data=training[, 8:ncol(training)],
data=training[, c('classe', nznames)],
trControl=fitControl,
#preProcess=c('center', 'scale'),
method='rf',
ntree=100
)
model_cart <- train(
classe ~ .,
#data=training[, 8:ncol(training)],
data=training[, c('classe', nznames)],
trControl=fitControl,
#preProcess=c('center', 'scale'),
method='rpart'
)
save(model_cart, file='./ModelFitCART.RData')
model_gbm <- train(
classe ~ .,
#data=training[, 8:ncol(training)],
data=training[, c('classe', nznames)],
trControl=fitControl,
#preProcess=c('center', 'scale'),
method='gbm'
)
save(model_gbm, file='./ModelFitGBM.RData')
model_rf <- train(
classe ~ .,
#data=training[, 8:ncol(training)],
data=training[, c('classe', nznames)],
trControl=fitControl,
#preProcess=c('center', 'scale'),
method='rf',
ntree=100
)
save(model_rf, file='./ModelFitRF.RData')
predCART <- predict(model_cart, newdata=testing)
cmCART <- confusionMatrix(predCART, testing$classe)
predGBM <- predict(model_gbm, newdata=testing)
cmGBM <- confusionMatrix(predGBM, testing$classe)
predRF <- predict(model_rf, newdata=testing)
cmRF <- confusionMatrix(predRF, testing$classe)
AccuracyResults <- data.frame(
Model = c('CART', 'GBM', 'RF'),
Accuracy = rbind(cmCART$overall[1], cmGBM$overall[1], cmRF$overall[1])
)
print(AccuracyResults)
